{
	"compilerOptions": {
		//编译js的目标es版本
		"target": "ESNext",
		//使用es版本
		"module": "ESNext",
		"outDir": "./dist",
		"allowJs": true,
		//开启严格模式
		"strict": true,
		//通过为导入内容创建命名空间，实现 CommonJS 和 ES 模块之间的互操作性
		"esModuleInterop": true,
		//强制代码中使用的模块文件名必须和文件系统中的文件名保持大小写一致
		"forceConsistentCasingInFileNames": true,
		//用于选择模块解析策略，有“node”和classic两种类型
		"moduleResolution": "node",
		//允许使用 xxx 代替 * as xxx 导入
		"allowSyntheticDefaultImports": true,
		//指定jsx 代码的生成：'preserve','react-native',or 'react'
		"jsx": "preserve",
		//用来指定编译时是否生成.map 文件
		"sourceMap": true,
		//是否可以导入 json module
		"resolveJsonModule": true,
		//是否检测定义了但没有使用的变量
		"noUnusedLocals": true,
		// 是否检测在函数体中没有使用的参数
		"noUnusedParameters": true,
		//是否启用实验性的装饰器特性
		"experimentalDecorators": true,
		//ts中可以使用的库， 这里配置为 dom 与 es 模块
		"lib": ["dom", "esnext"],
		//不允许变量或函数参数具有隐式any类型
		"noImplicitAny": true,
		//启用阻止对下载库的类型检查
		"skipLibCheck": true,
		//types用来指定需要包含的模块
		"types": ["vite/client", "element-plus/global"],
		//编译的时候删除注释
		"removeComments": true,
		//使用绝对路径时使用 baseUrl去解析导入的路径
		"baseUrl": ".",
		//在 tsconfig.json 里使用路径别名
		"paths": {
			"@/*": ["src/*"],
			"#/*": ["types/*"]
		},
		//配置虚拟目录
		"rootDirs": []
	},
	//指定需要编译文件
	"include": [
		"src/**/*.ts",
		"src/**/*.d.ts",
		"src/**/*.tsx",
		"src/**/*.vue",
		"types/**/*.d.ts",
		"types/**/*.ts",
		"build/**/*.ts",
		"build/**/*.d.ts",
		"mock/**/*.ts",
		"test/*.test.ts",
		"vite.config.ts"
	],
	//指定不需要编译的文件
	"exclude": ["node_modules", "dist", "**/*.js"]
}
